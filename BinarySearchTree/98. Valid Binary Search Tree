/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
 //Iterative Inorder(left,root,right) where prev is supposed to be smaller than the curr
 class Solution
 {
   public boolean isValidBST(TreeNode root) 
   {
     Stack<TreeNode> stack = new Stack<>();
     TreeNode curr=root;
     TreeNode prev=null;
     while(curr!=null || stack.size()>0)
     {
       while(curr!=null)
       {
         stack.push(curr);
         curr=curr.left;
       }
       curr=stack.pop();
       if(prev!=null && prev.val>=curr.val) return false;
       prev=curr;
       curr=curr.right;
     }
     return true;
   }
 }
